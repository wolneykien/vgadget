Терминальная USB система

Терминальная USB система предсавляет из себя два модуля ядра Linux --
'''g_vgadget''' и '''vdevice''' -- предназначенных для организации
терминальной связи между двумя компьютерами по протоколу USB. Один из
модулей реализует функции ведомого USB-устройства и предоставляет
интерфейс для локального обмена данными с ''интерпретатором комманд''.
Другой модуль реализует функции ведущего USB-устройства и предоставляет
интерфейс для локального обмена данными с терминальной программой.


== Модуль ведомого устройства ==

Модуль g_vgadget.ko предназначен для организации подсистемы обработки данных
на основе пользовательского приложения с интерфейсом в виде ведомого
устройства USB версий 1.1 и 2.0.

=== Параметры загрузки модуля ===

Модуль принимает следующие параметры загрузки, определяющие представление
устройства ведущей системе:

* vendor -- произвольный код производителя устройства;
* product -- произвольный код изделия;
* release -- произвольный код выпуска;
* vendor_name -- произвольное имя производителя устройства (до 32 символов);
* product_name -- произвольное имя продукта (до 32 символов);
* serial -- произвольный серийный код изделия (до 12 символов);
* cmd_addr -- желаемый адрес оконечной точки для записи команд;
* status_addr -- желаемый адрес  оконечной точки для чтения результатов;
* fifo_addr -- желаемый адрес оконечной точки для чтения потока данных;
* config -- номер конфигурации устройства.

Обязательными для определения являются vendor и product -- они определяют
сцепление с ведущей системой, ожижающей определнных значений этих параметров.
Остальные прараметры могут быть опущены. При этом адреса оконечных точек
будет определены механизмом автоконфигурации, а номер конфигурации устройства
выбран ведущей системой в результате обмена сервисными данными на стадии
сцепления.

В том случае, если адреса оконечных точек, присвоенные на основании
автоконфигурации, оказываются по тем или иным причинам непригодными, действие
автоконфигуратора может быть скорректировано с помощью параметров cmd_addr,
status_addr и fifo_addr, определяющих желаемые адреса точек. После этого
из всех свободных точек, предоставляемых переферийным контроллером USB будут
выбраны точки, максимально удовлетворяющие указанным критериям.

Модуль поддерживает две конфигурации (под номерами 1 и 2). Отличие между ними
заключается в том, что в конфигурации 1 функции консоли
(командная и статусная точки) и скоростной передачи данных (точка данных)
выделены в отдельные интерфейсы, в то время как в конфигурации 2 все
три точки объеденины в единственный интерфейс.

Модуль принимает следующие параметры загрузки, влияющие на его
функционирование:

* maxwrites -- определяет максимально допустимое количество буферов ожидающих передачи на ведущую систему (по умолчанию 16).

=== Взаимодействие с пользовательскими программами ===

Модуль предоставляет файл символьного устройства

  crw 63 0 /dev/usbconsS

который предназначен для двусторонего обмена коммандно-статусной
информацией с ведущей системой. Пользовательская программа, выступающая
в роли интерпретатора комманд, открывает данный файл на чтение и запись.
В самом простом случае в качестве интерпретатора комманд может быть
использован системный коммандный интерпретотор (Shell).

Файл символьного устройства поддерживает операции open, poll, read, write,
release. Количество неблокируемых записей определяется параметром загрузки
maxwrites и по умолчанию составляет 16 буферов. Также после открытия файла
производится упреждающее чтение одного буфера командных данных.

Модуль предоставляет файл символьного устройства

  c-w 127 0 /dev/usbconsF

который предназначен для скоростной передачи данных на ведущую систему.
Высокая скорость обработки данных достигается за счёт прямой передачи страниц
памяти от источника данных, посредством операции splice_write. Полный список
операций, поддерживаемых данным файлом устройства включает: open, write,
splice_write, mmap, sendpage, release. Операция mmap также может быть
использована для эффективной передачи данных путём прямой записи в страницы
памяти, заранее выделенные для этого модулем. Альтернативным способом
эффективной передачи пользовательских данных является системный вызов vmsplice.
Для передачи данных от другого устройства предпочтительно использовать
системный вызов splice. Для совершения данной операции из командного
интерпретатора может быть использована одноимённая программа splice, входящая
в комплект поставки. Информация по использованию программы может быть получена
путём её запуска без параметров.


== Модуль ведущего устройства ==

Модуль vdevice.ko предназначен для организации доступа пользовательских
приложений к подсистеме обработки данных на ведомой системе, подключённой
к ведущей системе с помощью интерфейса USB версий 1.1 и 2.0.

=== Параметры загрузки модуля ===

Модуль принимает следующие параметры загрузки, определяющие подключение
ведомого устройства:

* vendor -- ожидаемый код производителя устройства;
* product -- ожидаемый код изделия.

Модуль принимает следующие параметры загрузки, влияющие на его
функционирование:

* minor -- базовый младший номер для файлов устройств;
* maxwrites -- определяет максимально допустимое количество буферов ожидающих передачи на ведомую систему (по умолчению 4);
* maxreads -- определяет максимальное количество буфеорв считываемых по скоростному каналу из ведомой системы в упреждающем режиме (по умолчанию 4);
* fakeread -- включение режима холостого чтения (для измерения пиковой
скорости обмена данными с пользовательским приложением).

=== Взаимодействие с пользовательскими программами ===

Модуль предоставляет файл символьного устройства

  crw <usb-major> <minor+n> /dev/usbcons<n>

который предназначен для двусторонего обмена коммандно-статусной
информацией с ведомой системой. Пользовательская программа, выступающая
в роли консоли, открывает данный файл на чтение и запись.

Файл символьного устройства поддерживает операции open, poll, read, write,
release. Количество неблокируемых записей определяется параметром загрузки
maxwrites и по умолчанию составляет 4 буфера. Также после открытия файла
производится упреждающее чтение одного буфера статусных данных.

Модуль предоставляет файл символьного устройства

    cr- <usb-major> <minor+192+n> /dev/usbconsf<n>

который предназначен для скоростного приёма данных от ведомой системы.
Высокая скорость обработки данных достигается за счёт прямой передачи страниц
памяти к приёмнику данных, посредством операции splice_read. Полный список
операций, поддерживаемых данным файлом устройства включает: open, read,
splice_read, poll, release. Для передачи данных в другое устройство, сокет
или файл предпочтительно использовать системный вызов splice. Для совершения
данной операции из командного интерпретатора может быть использована
одноимённая программа splice, входящая в комплект поставки. Информация по
использованию программы может быть получена путём её запуска без параметров.
